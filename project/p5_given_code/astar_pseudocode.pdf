%PDF-1.3
%‚„œ”
2 0 obj
<<
/Length 3028
>>
stream
BT
/TT2 1 Tf
10 0 0 10 59.5 792.4 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(astar_pseudocode.txt                                                          Page 1)Tj
/TT4 1 Tf
0 -2 TD
(// A* pseudocode from the wikipedia article)Tj
0 -1 TD
(function A*\(start, goal\))Tj
T*
(    // The set of nodes already evaluated)Tj
T*
(    closedSet := {})Tj
0 -2 TD
(    // The set of currently discovered nodes that are not evaluated yet.)Tj
0 -1 TD
(    // Initially, only the start node is known.)Tj
T*
(    openSet := {start})Tj
0 -2 TD
(    // For each node, which node it can most efficiently be reached from.)Tj
0 -1 TD
(    // If a node can be reached from many nodes, cameFrom will eventually )Tj
T*
(    // contain the most efficient previous step.)Tj
T*
(    cameFrom := an empty map)Tj
0 -2 TD
(    // For each node, the cost of getting from the start node to that node.)Tj
0 -1 TD
(    gScore := map with default value of Infinity)Tj
0 -2 TD
(    // The cost of going from start to start is zero.)Tj
0 -1 TD
(    gScore[start] := 0)Tj
0 -2 TD
(    // For each node, the total cost of getting from the start node to the goal)Tj
0 -1 TD
(    // by passing by that node. That value is partly known, partly heuristic.)Tj
T*
(    fScore := map with default value of Infinity)Tj
0 -2 TD
(    // For the first node, that value is completely heuristic.)Tj
0 -1 TD
(    fScore[start] := heuristic_cost_estimate\(start, goal\))Tj
0 -2 TD
(    while openSet is not empty)Tj
0 -1 TD
(        current := the node in openSet having the lowest fScore[] value)Tj
T*
(        if current = goal)Tj
T*
(            return reconstruct_path\(cameFrom, current\))Tj
0 -2 TD
(        openSet.Remove\(current\))Tj
0 -1 TD
(        closedSet.Add\(current\))Tj
0 -2 TD
(        for each neighbor of current)Tj
0 -1 TD
(            if neighbor in closedSet)Tj
T*
(                continue         // Ignore the neighbor which is already evaluated.)Tj
0 -2 TD
(            if neighbor not in openSet  // Discover a new node)Tj
0 -1 TD
(                openSet.Add\(neighbor\))Tj
T*
(            )Tj
T*
(            // The distance from start to a neighbor)Tj
T*
(            //the "dist_between" function may vary as per the solution requirements.)Tj
T*
(            tentative_gScore := gScore[current] + dist_between\(current, neighbor\))Tj
T*
(            if tentative_gScore >= gScore[neighbor])Tj
T*
(                continue                // This is not a better path.)Tj
0 -2 TD
(            // This path is the best until now. Record it!)Tj
0 -1 TD
(            cameFrom[neighbor] := current)Tj
T*
(            gScore[neighbor] := tentative_gScore)Tj
T*
(            fScore[neighbor] )Tj
T*
(                := gScore[neighbor] + heuristic_cost_estimate\(neighbor, goal\) )Tj
0 -2 TD
(    return failure)Tj
T*
(function reconstruct_path\(cameFrom, current\))Tj
0 -1 TD
(    total_path := {current})Tj
T*
(    while current in cameFrom.Keys:)Tj
T*
(        current := cameFrom[current])Tj
T*
(        total_path.append\(current\))Tj
T*
(    return total_path)Tj
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
>>
/ExtGState <<
/GS1 6 0 R
>>
>>
endobj
6 0 obj
<<
/Type /ExtGState
/SA false
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
8 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 262179
/FontBBox [-113 -250 749 801]
/FontName /Courier-Bold
/ItalicAngle 0
/StemV 133
/XHeight 439
/StemH 84
>>
endobj
9 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 35
/FontBBox [-28 -250 628 805]
/FontName /Courier
/ItalicAngle 0
/StemV 51
/XHeight 426
/StemH 51
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 120
/Widths [600 0 0 0 0 0 0 0 0 0 0 0 0 0 600 0 
0 600 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
600 0 0 0 0 0 0 0 0 0 0 0 0 0 0 600 
0 600 0 600 600 600 0 600 0 0 0 0 0 0 0 600 
600 0 600 600 600 600 0 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier-Bold
/FontDescriptor 8 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 125
/Widths [600 600 600 0 0 0 0 0 600 600 600 600 600 0 600 600 
600 0 0 0 0 0 0 0 0 0 600 0 0 600 600 0 
0 600 0 0 600 0 600 0 0 600 0 600 0 0 0 0 
0 0 600 600 600 0 0 0 0 0 0 600 0 600 0 600 
0 600 600 600 600 600 600 600 600 600 0 600 600 600 600 600 
600 600 600 600 600 600 600 600 0 600 600 600 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier
/FontDescriptor 9 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 7 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
10 0 obj
<<
/S /D
>>
endobj
11 0 obj
<<
/Nums [0 10 0 R ]
>>
endobj
7 0 obj
<<
/Type /Pages
/Kids [1 0 R]
/Count 1
/MediaBox [0 0 595 842]
>>
endobj
12 0 obj
<<
/CreationDate (D:20181113120813-08'00')
/ModDate (D:20181113120813-08'00')
/Producer (PSNormalizer.framework)
>>
endobj
13 0 obj
<<
/Type /Catalog
/Pages 7 0 R
/PageLabels 11 0 R
>>
endobj
xref
0 14
0000000000 65535 f 
0000004568 00000 n 
0000000016 00000 n 
0000003096 00000 n 
0000003733 00000 n 
0000004114 00000 n 
0000003202 00000 n 
0000004716 00000 n 
0000003342 00000 n 
0000003543 00000 n 
0000004648 00000 n 
0000004676 00000 n 
0000004797 00000 n 
0000004929 00000 n 
trailer
<<
/Size 14
/Root 13 0 R
/Info 12 0 R
/ID [<69e9098ccff85abd1081d5921c883585><69e9098ccff85abd1081d5921c883585>]
>>
startxref
4998
%%EOF
